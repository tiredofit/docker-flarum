#!/bin/bash
source /assets/functions/00-container

if [ "${3,,}" = "--debug" ]; then
  set -x
fi

init() {
    sudo -u "${NGINX_USER}" mkdir -p "${NGINX_WEBROOT}"/extensions/.cache
    cd "${NGINX_WEBROOT}"
}

cleanup() {
    echo "**** [flarum-extension-tool] Cleaning up"
    silent sudo -u "${NGINX_USER}" php "${NGINX_WEBROOT}"/flarum cache:clear
    chown -R "${NGINX_USER}":"${NGINX_GROUP}" "${NGINX_WEBROOT}"
    chown -R "${NGINX_USER}":"${NGINX_GROUP}" /data
    rm -rf /tmp/composer-updates
}

check_if_installed() {
    cat ${NGINX_WEBROOT}/composer.json | grep "${1}" -c
}


case "${1,,}" in
    install|i) # Install Package
        init
        echo "**** [flarum-extension-tool] Installing Package '${2}'"
        if [ "$(check_if_installed $2)" != "0" ] ; then
            echo "**** [flarum-extension-tool] ${2} is already installed. Perhaps you wish to update?"
        else
            silent sudo -u "${NGINX_USER}" composer require "${2}"
            if [ -d "${NGINX_WEBROOT}"/vendor/"${2}" ]; then
                mkdir -p /data/extensions/$(echo "${2}" | cut -d / -f 1)
                mv "${NGINX_WEBROOT}"/vendor/$(echo "${2}" | cut -d / -f 1)/$(echo ${2} | cut -d / -f 2) /data/extensions/"${NGINX_WEBROOT}"/vendor/$(echo ${2} | cut -d / -f 1)
                ln -sf /data/extensions/$(echo "${2}" | cut -d / -f 1)/$(echo "${2}" | cut -d / -f 2)  "${NGINX_WEBROOT}"/vendor/$(echo "${2}" | cut -d / -f 1)/$(echo "${2}" | cut -d / -f 2)
                echo "${2}" >> /data/extensions/list
            fi
            echo "**** [flarum-extension-tool] '${2}' installed."
        fi
        cleanup
    ;;
    remove|delete|r|d) # Remove Package
        init
        echo "**** [flarum-extension-tool] Removing Packge '${2}'"
        if [ "$(check_if_installed $2)" != "0" ] ; then
            silent sudo -u "${NGINX_USER}" composer remove "${2}"
            sed -i "${2}/d" /data/extensions/list
            echo "**** [flarum-extension-tool] '${2}' removed."
        else
            echo "**** [flarum-extension-tool] '${2}' not installed. Please verify package name"
        fi
        cleanup
    ;;
    update|u)  # Update Package
        init
        if [ "$(check_if_installed $2)" != "0" ] ; then
            echo "**** [flarum-extension-tool] Downloading Repository Information"
            silent sudo -u "${NGINX_USER}" composer outdated > /tmp/composer-updates
            if [ "${2,,}" = "list" ];  then
                echo "**** [flarum-extension-tool] Showing updates available for all packages"
                cat /tmp/composer-updates
                rm -rf /tmp/composer-updates
                cleanup
                exit 1
            fi
            if [[ $(cat /tmp/composer-updates | grep ${2} | awk '{print $1}') ]]; then
                    echo "**** [flarum-extension-tool] Updating Package '${2}'"
                    if [ "$(cat /tmp/composer-updates | grep ${2} | awk '{print $2}')" != "$(cat /tmp/composer-updates | grep ${2} | awk '{print $4}')" ]; then
                        echo "**** [flarum-extension-tool] Newer version of '${2}' found. Upgrading.."
                        silent sudo -u "${NGINX_USER}" composer update "${2}"
                        silent sudo -u "${NGINX_USER}" php ${NGINX_WEBROOT}/flarum migrate
                        echo "**** [flarum-extension-tool] Update of package '${2}' completed."
                    fi
            else
                echo "**** [flarum-extension-tool] No update required for '${2}'"
            fi
        fi
        cleanup
    ;;
    --help|-h)
        echo "Flarum Docker Extension Tool"
        echo "Usage:"
        echo "  $0 {install|remove|update} {packagename}"
        echo ""
        echo "  install             Install Package if not already installed"
        echo "  remove              Remove Package if installed"
        echo "  update              Updte Package if installed"
        echo "  update list         Show all available package updates"
        exit 1
    ;;
    *)
        echo "Usage:"
        echo "  $0 {install|remove|update} {packagename}"
        echo "  $0 {install|remove|update} {packagename} --debug"
        echo "  $0 -h|--help"
        exit 1
    ;;
esac

if [ -z "${2}" ]; then
    echo $"Usage:"
    echo "  $0 {install|remove|update} {packagename}"
    echo "  $0 {install|remove|update} {packagename} --debug"
    echo "  $0 -h|--help"
    exit 1
fi