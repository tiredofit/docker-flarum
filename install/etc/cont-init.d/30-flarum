#!/usr/bin/with-contenv bash

source /assets/functions/00-container
prepare_service

PROCESS_NAME="flarum"
check_service_initialized init 20-php-fpm

### Sanity Test
sanity_db
sanity_var SITE_URL "Site URL"
db_ready mariadb

### Check to see if this is a new install
$mysqlcmd -e "use "$DB_NAME"; SELECT * FROM "$DB_PREFIX"migrations;" > /dev/null 2>&1
if [ $? -gt 0 ]; then
  	 print_warn "Starting a clean Flarum installation. This may take 1-10 minutes.."

     if [ ! -d "/data/assets" ]; then
        cp -R /assets/install/assets /data
     fi

     if [ ! -d "/data/extensions" ]; then
        mkdir -p /data/extensions
     fi

     if [ ! -d "/data/storage" ]; then
        cp -R /assets/install/storage /data
     fi

     rm -rf ${NGINX_WEBROOT}/config.php
     ### Write Configuration Installation File
     sed -i -e "s|<DEBUG_MODE>|${DEBUG_MODE}|g" ${NGINX_WEBROOT}/config.yml
     sed -i -e "s|<DB_HOST>|${DB_HOST}|g" ${NGINX_WEBROOT}/config.yml
     sed -i -e "s|<DB_NAME>|${DB_NAME}|g" ${NGINX_WEBROOT}/config.yml
     sed -i -e "s|<DB_USER>|${DB_USER}|g" ${NGINX_WEBROOT}/config.yml
     sed -i -e "s|<DB_PASS>|${DB_PASS}|g" ${NGINX_WEBROOT}/config.yml
     sed -i -e "s|<DB_PORT>|${DB_PORT}|g" ${NGINX_WEBROOT}/config.yml
     sed -i -e "s|<DB_PREFIX>|${DB_PREFIX}|g" ${NGINX_WEBROOT}/config.yml
     sed -i -e "s|<SITE_URL>|${SITE_URL}|g" ${NGINX_WEBROOT}/config.yml   
     sed -i -e "s|<ADMIN_USER>|${ADMIN_USER}|g" ${NGINX_WEBROOT}/config.yml
     sed -i -e "s|<ADMIN_PASS>|${ADMIN_PASS}|g" ${NGINX_WEBROOT}/config.yml
     sed -i -e "s|<ADMIN_EMAIL>|${ADMIN_EMAIL}|g" ${NGINX_WEBROOT}/config.yml
     sed -i -e "s|<SITE_TITLE>|${SITE_TITLE}|g" ${NGINX_WEBROOT}/config.yml

     silent php ${NGINX_WEBROOT}/flarum install --file=${NGINX_WEBROOT}/config.yml
     echo $FLARUM_VERSION 'first installed on '`date`> /data/.version
     cp -R ${NGINX_WEBROOT}/composer.json /data
     rm -rf ${NGINX_WEBROOT}/composer.json
     ln -s /data/composer.json ${NGINX_WEBROOT}/composer.json
     rm -rf ${NGINX_WEBROOT}/config.yml
  else
  	 print_notice "Detected previous installation"
     rm -rf ${NGINX_WEBROOT}/config.yml
     ### Write Configuration File
     sed -i -e "s|<DEBUG_MODE>|${DEBUG_MODE}|g" ${NGINX_WEBROOT}/config.php
     sed -i -e "s|<DB_HOST>|${DB_HOST}|g" ${NGINX_WEBROOT}/config.php 
     sed -i -e "s|<DB_NAME>|${DB_NAME}|g" ${NGINX_WEBROOT}/config.php 
     sed -i -e "s|<DB_USER>|${DB_USER}|g" ${NGINX_WEBROOT}/config.php 
     sed -i -e "s|<DB_PASS>|${DB_PASS}|g" ${NGINX_WEBROOT}/config.php 
     sed -i -e "s|<DB_PORT>|${DB_PORT}|g" ${NGINX_WEBROOT}/config.php 
     sed -i -e "s|<DB_PREFIX>|${DB_PREFIX}|g" ${NGINX_WEBROOT}/config.php 
     sed -i -e "s|<ADMIN_PATH>|${ADMIN_PATH}|g" ${NGINX_WEBROOT}/config.php 
     sed -i -e "s|<API_PATH>|${API_PATH}|g" ${NGINX_WEBROOT}/config.php
     sed -i -e "s|<SITE_URL>|${SITE_URL}|g" ${NGINX_WEBROOT}/config.php
     ### Upgrade Check
     if [ "$FLARUM_VERSION" != `head -n 1 /data/.version | awk '{print $1'}` ]; then
        print_warn "Detected New Version from original installation, attempting automatic upgrade.. This may take a while.."
        silent php ${NGINX_WEBROOT}/flarum migrate
        silent php ${NGINX_WEBROOT}/flarum cache:clear
        echo $FLARUM_VERSION 'upgraded on '`date` | cat - /data/.version > /tmp/.version && mv /tmp/.version /data/.version
        cp ${NGINX_WEBROOT}/composer.json /data/composer.json
        ln -s /data/composer.json ${NGINX_WEBROOT}/composer.json
     else 
        rm -rf ${NGINX_WEBROOT}/composer.json
        ln -s /data/composer.json ${NGINX_WEBROOT}/composer.json
     fi

     ### Extensions Check (Install / Update if available
     silent php ${NGINX_WEBROOT}/flarum cache:clear
     mkdir -p ${NGINX_WEBROOT}/extensions/.cache
     if [ -f "${NGINX_WEBROOT}/extensions/install" ]; then
        print_info "Installing extensions.. This may take a while to get prepared"
        cd ${NGINX_WEBROOT}
        silent composer outdated > /tmp/composer-updates
        while read extension; do
          if [ `cat ${NGINX_WEBROOT}/composer.json | grep ${extension} | awk '{print $1'}` ]; then
              print_notice "Extensions: Found "${extension}" however it is already installed..."
              if [[ `cat /tmp/composer-updates | grep ${extension} | awk '{print $1'}` ]]; then
                 if [ `cat /tmp/composer-updates | grep ${extension} | awk '{print $2'}` != `cat /tmp/composer-updates | grep ${extension} | awk '{print $4'}` ]; then
                   if [ "$EXTENSIONS_AUTO_UPDATE" = "FALSE" ] || [ "$EXTENSIONS_AUTO_UPDATE" = "false" ]; then
                      print_warn "Extensions: Auto Updating of Extensions Disabled"
                      print_warn "Extensions: Newer Version of '${extension}' found - Please update manually"
                   else
                      print_notice "Extensions: Newer version of '${extension}' found. Upgrading.."
                      silent composer update ${extension}
                      silent php ${NGINX_WEBROOT}/flarum migrate
                   fi
                 fi
               fi
          else
          print_notice "Extensions: Installing "${extension}
          silent composer require ${extension}
                fi
        done < ${NGINX_WEBROOT}/extensions/install
        rm -rf /tmp/composer-updates
        print_notice "Finished installing extensions"
    fi
fi

silent php ${NGINX_WEBROOT}/flarum cache:clear

### Custom File Support
if [ -d /assets/custom ] ; then
    print_warn "Custom Files Found, Copying over top of Master"
    cp -R /assets/custom/* ${NGINX_WEBROOT}
    chown -R ${NGINX_USER}:${NGINX_GROUP} ${NGINX_WEBROOT}
fi

chown -R ${NGINX_USER}:${NGINX_GROUP} /data
chown -R ${NGINX_USER}:${NGINX_GROUP} ${NGINX_WEBROOT}

print_warn "Container Initialized - Now starting Web Services - Visit '${SITE_URL}' to proceed"

liftoff