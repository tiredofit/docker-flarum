#!/usr/bin/with-contenv bash

silent() {
  if [ "$DEBUG_MODE" = "TRUE" ] || [ "$DEBUG_MODE" = "true" ];  then
    "$@"
  else
    "$@" > /dev/null 2>&1
  fi
}

while [ ! -f /tmp/state/init-20-php-fpm ]
do
  sleep 1
done

### Set Debug Mode
if [ "$DEBUG_MODE" = "TRUE" ] || [ "$DEBUG_MODE" = "true" ]; then
    set -x
    DEBUG_MODE=true
else
    DEBUG_MODE=false
fi

### Set Defaults
ADMIN_EMAIL=${ADMIN_EMAIL:-"admin@example.com"}
ADMIN_PASS=${ADMIN_PASS:-"flarum"}
ADMIN_PATH=${ADMIN_PATH:-"admin"}
ADMIN_USER=${ADMIN_USER:-"admin"}
API_PATH=${API_PATH:-"api"}
DB_PORT=${DB_PORT:-3306}
DB_PREFIX=${DB_PREFIX:-"flarum_"}
SITE_TITLE=${SITE_TITLE:-"Flarum"}

### Sanity Test
if [ ! -n "$DB_HOST" ]; then
    echo '** [flarum] ERROR: No Database Host Entered! '
    exit 1
fi

if [ ! -n "$DB_NAME" ]; then
    echo '** [flarum] ERROR: No Database Pass Entered! '
    exit 1
fi

if [ ! -n "$DB_USER" ]; then
    echo '** [flarum] ERROR: No Database User Entered! '
    exit 1
fi

if [ ! -n "$DB_PASS" ]; then
    echo '** [flarum] ERROR: No Database Pass Entered!'
    exit 1
fi

if [ ! -n "$SITE_URL" ]; then
    echo '** [flarum] ERROR: No SITE_URL Entered!'
    exit 1
fi

### Make sure that DB is accessible
while true; do
  mysqlcmd="mysql -u$DB_USER -h$DB_HOST -p$DB_PASS -P$DB_PORT"
  out="`$mysqlcmd -e "SELECT COUNT(*) FROM information_schema.FILES;" 2>&1`"
  echo "$out" | grep -E "COUNT|Enter" 2>&1 > /dev/null
  if [ $? -eq 0 ]; then
      echo "** [flarum] MariaDB Server '"$DB_HOST"' is available"
      break
  fi
  echo "** [flarum] MariaDB Server '"$DB_HOST"' unavailable. Sleeping a little bit ..."
  sleep 5
done

### Check to see if this is a new install
$mysqlcmd -e "use "$DB_NAME"; SELECT * FROM "$DB_PREFIX"migrations;" > /dev/null 2>&1
if [ $? -gt 0 ]; then
  	 echo "** [flarum] Starting a clean Flarum installation. This may take 1-10 minutes.."

     if [ ! -d "/data/assets" ]; then
        cp -R /assets/install/assets /data
     fi

     if [ ! -d "/data/extensions" ]; then
        mkdir -p /data/extensions
     fi

     if [ ! -d "/data/storage" ]; then
        cp -R /assets/install/storage /data
     fi

     rm -rf /www/html/config.php
     ### Write Configuration Installation File
     sed -i -e "s|<DEBUG_MODE>|${DEBUG_MODE}|g" /www/html/config.yml
     sed -i -e "s|<DB_HOST>|${DB_HOST}|g" /www/html/config.yml
     sed -i -e "s|<DB_NAME>|${DB_NAME}|g" /www/html/config.yml
     sed -i -e "s|<DB_USER>|${DB_USER}|g" /www/html/config.yml
     sed -i -e "s|<DB_PASS>|${DB_PASS}|g" /www/html/config.yml
     sed -i -e "s|<DB_PORT>|${DB_PORT}|g" /www/html/config.yml
     sed -i -e "s|<DB_PREFIX>|${DB_PREFIX}|g" /www/html/config.yml
     sed -i -e "s|<SITE_URL>|${SITE_URL}|g" /www/html/config.yml   
     sed -i -e "s|<ADMIN_USER>|${ADMIN_USER}|g" /www/html/config.yml
     sed -i -e "s|<ADMIN_PASS>|${ADMIN_PASS}|g" /www/html/config.yml
     sed -i -e "s|<ADMIN_EMAIL>|${ADMIN_EMAIL}|g" /www/html/config.yml
     sed -i -e "s|<SITE_TITLE>|${SITE_TITLE}|g" /www/html/config.yml

     silent php /www/html/flarum install --file=/www/html/config.yml
     echo $FLARUM_VERSION 'first installed on '`date`> /data/.version
     cp -R /www/html/composer.json /data
     rm -rf /www/html/composer.json
     ln -s /data/composer.json /www/html/composer.json
     rm -rf /www/html/config.yml
  else
  	 echo "** [flarum] Detected previous installation"
     rm -rf /www/html/config.yml
     ### Write Configuration File
     sed -i -e "s|<DEBUG_MODE>|${DEBUG_MODE}|g" /www/html/config.php
     sed -i -e "s|<DB_HOST>|${DB_HOST}|g" /www/html/config.php 
     sed -i -e "s|<DB_NAME>|${DB_NAME}|g" /www/html/config.php 
     sed -i -e "s|<DB_USER>|${DB_USER}|g" /www/html/config.php 
     sed -i -e "s|<DB_PASS>|${DB_PASS}|g" /www/html/config.php 
     sed -i -e "s|<DB_PORT>|${DB_PORT}|g" /www/html/config.php 
     sed -i -e "s|<DB_PREFIX>|${DB_PREFIX}|g" /www/html/config.php 
     sed -i -e "s|<ADMIN_PATH>|${ADMIN_PATH}|g" /www/html/config.php 
     sed -i -e "s|<API_PATH>|${API_PATH}|g" /www/html/config.php
     sed -i -e "s|<SITE_URL>|${SITE_URL}|g" /www/html/config.php
     ### Upgrade Check
     if [ "$FLARUM_VERSION" != `head -n 1 /data/.version | awk '{print $1'}` ]; then
        echo '** [flarum] Detected New Version from original installation, attempting automatic upgrade.. This may take a while..'
        silent php /www/html/flarum migrate
        silent php /www/html/flarum cache:clear
        echo $FLARUM_VERSION 'upgraded on '`date` | cat - /data/.version > /tmp/.version && mv /tmp/.version /data/.version
        cp /www/html/composer.json /data/composer.json
        ln -s /data/composer.json /www/html/composer.json
     else 
        rm -rf /www/html/composer.json
        ln -s /data/composer.json /www/html/composer.json
     fi

     ### Extensions Check (Install / Update if available
     silent php /www/html/flarum cache:clear
     COMPOSER_CACHE_DIR=/www/html/extensions/.cache
     mkdir -p /www/html/extensions/.cache
     EXTENSIONS_LIST=/www/html/extensions/install
     if [ -f "${EXTENSIONS_LIST}" ]; then
        echo "** [flarum] Installing extensions.. This may take a while to get prepared.."
        cd /www/html
        silent composer outdated > /tmp/composer-updates
        while read extension; do
          if [ `cat /www/html/composer.json | grep ${extension} | awk '{print $1'}` ]; then
              echo "** [flarum] Extensions: Found "${extension}" however it is already installed..."
              if [[ `cat /tmp/composer-updates | grep ${extension} | awk '{print $1'}` ]]; then
                 if [ `cat /tmp/composer-updates | grep ${extension} | awk '{print $2'}` != `cat /tmp/composer-updates | grep ${extension} | awk '{print $4'}` ]; then
                   echo "** [flarum] Extensions: Newer version of "${extension}"found. Upgrading.."
                   silent COMPOSER_CACHE_DIR="${CACHE_DIR}" composer update ${extension}
                   silent php /www/html/flarum migrate
                 fi
               fi
          else
          echo "** [flarum] Extensions: Installing "${extension}
          silent COMPOSER_CACHE_DIR="${CACHE_DIR}" composer require ${extension}
                fi
        done < ${EXTENSIONS_LIST}
        rm -rf /tmp/composer-updates
        echo "** [flarum] Finished installing extensions"
    fi
fi

silent php /www/html/flarum cache:clear

### Custom File Support
if [ -d /assets/custom ] ; then
    echo "** [flarum] Custom Files Found, Copying over top of Master"
    cp -R /assets/custom/* /www/html
    chown -R nginx:www-data /www/html
fi

chown -R nginx:www-data /data
chown -R nginx:www-data /www/html

echo "** [flarum] Container Initialized - Now starting Web Services - Visit "$SITE_URL" to proceed"

mkdir -p /tmp/state
touch /tmp/state/init-30-flarum
